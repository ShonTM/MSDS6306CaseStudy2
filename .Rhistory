# Transform dataset to numeric for analysis
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
# nancdss <- is.nan(cdss)
# #NABEER == NA
# #sum(NABEER, count = TRUE)
# ct_SUM1 <- colSums(nancdss)
# ct_SUM1
str(cdss)
# Check for normality of log transformed data
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
head(cdss)
# Check for correlation of log transformed violent crime data
cor(cdss$crimedata.medIncome, cdss$crimedatalog)
cor(cdss$crimedata.agePct12t29, cdss$crimedatalog)
cor(cdss$crimedata.blackPerCap, cdss$crimedatalog)
cor(cdss$crimedata.HispPerCap, cdss$crimedatalog)
cor(cdss$crimedata.RentLowQ, cdss$crimedatalog)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedatalog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
cdsslog <- log10(cdss)
head(cdsslog)
cdsslog <- cdsslog[-c(crimedatalog),] ## This will remove the 212 column and leave the rest
head(cdsslog)
cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
knitr::opts_chunk$set(echo = TRUE)
data = crimedata
cdss <- data.frame(crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
str(cdss)
head(cdsslog)
str(cdsslog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
ct_SUM <- colSums(nacdss)
ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop") ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE, main= "Black Per Capita data") ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE, main= "Hispanic Per Capita data") ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE, main= "Low Rent Q data") ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE, main= "% Less then 9th Grade Education data") ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
head(cdsslog)
# Untransformed correlation test
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdsslog$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.agePct12t29, pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
qqline(cdsslog$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.blackPerCap, pch = 1, frame = FALSE, main= "Black Per Capita data") ## plots the data
qqline(cdsslog$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.HispPerCap, pch = 1, frame = FALSE, main= "Hispanic Per Capita data") ## plots the data
qqline(cdsslog$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.RentLowQ, pch = 1, frame = FALSE, main= "Low Rent Q data") ## plots the data
qqline(cdsslog$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.PctLess9thGrade, pch = 1, frame = FALSE, main= "% Less then 9th Grade Education data") ## plots the data
qqline(cdsslog$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
# Check for correlation of log transformed violent crime data
cor(cdsslog$crimedata.medIncome, cdss$crimedatalog)
# Check for correlation of log transformed violent crime data
cor(cdsslog$crimedata.medIncome, cdsslog$crimedatalog)
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE, main= "Black Per Capita data") ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE, main= "Hispanic Per Capita data") ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE, main= "Low Rent Q data") ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE, main= "% Less then 9th Grade Education data") ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
# Check for correlation of log transformed violent crime data
cor(cdsslog$crimedata.medIncome, cdsslog$crimedatalog)
head(cdsslog)
?cor
class(cdsslog)
cdss.cor <- cor(cdsslog)
class(cdsslog)
cdss.cor <- cor(cdsslog)
cdss.cor
cdss.cor <- cor(cdss)
cdss
cdss.cor <- cor(cdss)
cdss
cdss.cor <- cor(nacdss)
nacdss
symnum(cdss)
class(cdss)
symnum(cdss)
?cor.test
# Untransformed correlation test
cor.test(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop, method = "kendall", alternative = "greater")
cor.test(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop, method = "spearm", alternative = "two-sided")
# Untransformed correlation test
cor.test(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop, method = "spearm", alternative = "two.sided")
cor.test(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop, method = "kendall", alternative = "two.sided")
cor.test(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE, main= "Black Per Capita data") ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE, main= "Hispanic Per Capita data") ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE, main= "Low Rent Q data") ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE, main= "% Less then 9th Grade Education data") ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
#Log Transform all variables
cdsslog <- log10(cdss)
cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
# Check for correlation of log transformed violent crime data
cor.test(cdsslog$crimedata.medIncome, cdsslog$crimedatalog, method = "pearson", alternative = "two.sided")
# Check for correlation of log transformed violent crime data
cor.test(cdsslog$crimedata.medIncome, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.agePct12t29, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.blackPerCap, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.HispPerCap, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.RentLowQ, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.PctLess9thGrade, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
#Log Transform all variables
cdsslog <- log(cdss)
cdsslog <- subset(cdsslog, select = -crimedatalog )
#cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
# Check for correlation of log transformed violent crime data
cor.test(cdsslog$crimedata.medIncome, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.agePct12t29, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.blackPerCap, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.HispPerCap, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.RentLowQ, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdsslog$crimedata.PctLess9thGrade, cdsslog$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
#cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
nancdss <- is.nan(cdsslog)
cdsslog
cdss.nan <- subset(x = cdsslog, ! is.nan(cdsslog))
cdss.nan <- subset.data.frame(x = cdsslog, ! is.nan(cdsslog))
cdss.nan <- subset.data.frame(x = cdsslog, is.nan(cdsslog))
cdss.nan <- subset.data.frame(x = cdsslog, is.nan(cdsslog$crimedata.blackPerCap))
cdss.nan
head(cdss.nan)
head(cdsslog)
(cdsslog)
cdss.cor == "-i
?-inf
?infinite
??infinite
1
""
"
??infinite
?grep
?matrix
m <- matrix(c(1,2,NA,NaN,1,Inf,-1,1,9,3),5)
# remove all rows with non-finite values
m[!rowSums(!is.finite(m)),]
# replace all non-finite values with 0
m[!is.finite(m)] <- 0
m
m
m <- matrix(c(1,2,NA,NaN,1,Inf,-1,1,9,3),5)
m
m[!rowSums(!is.finite(m)),]
m
m[!is.finite(m)] <- 0
m
cdsslog[!is.finite(cdsslog)] <- 0
cdsslog[!rowSums(!is.finite(cdsslog)),]
cdss.max <- is.matrix(cdsslog)
class(cdss.max)
cdss.max[!rowSums(!is.finite(cdss.max),]
cdss.max[!rowSums(!is.finite(cdss.max)),]
head(cdss.max)
head(cdss.max)
class(cdsslog)
#Log Transform all variables
cdsslog <- log(cdss)
#cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
#Check for normality after log transformation
# cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
# cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
# qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
# qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
# grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
# cdss[] <- lapply(cdss, gsub, pattern='-Inf', replacement='') ## removes chars from dataset
# grep("-Inf", cdss) ## tells you which lines contain the word in the parenthesis.
# Transform dataset to numeric for analysis
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
##nancdss <- is.nan(cdsslog)
# #NABEER == NA
# #sum(NABEER, count = TRUE)
##ct_SUM1 <- colSums(nancdss)
##ct_SUM1
str(cdsslog)
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
og$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
knitr::opts_chunk$set(echo = TRUE)
crimedata  <- "http://archive.ics.uci.edu/ml/machine-learning-databases/communities/communities.data"
df <- read.csv(crimedata, header = FALSE)
crimedata <- df
str(crimedata)
colnames(crimedata) <- c("state",
"county",
"community",
"communityname ",
"fold",
"population",
"householdsize",
"racepctblack",
"racePctWhite",
"racePctAsian",
"racePctHisp",
"agePct12t21",
"agePct12t29",
"agePct16t24",
"agePct65up",
"numbUrban",
"pctUrban",
"medIncome",
"pctWWage",
"pctWFarmSelf",
"pctWInvInc",
"pctWSocSec",
"pctWPubAsst",
"pctWRetire",
"medFamInc",
"perCapInc",
"whitePerCap",
"blackPerCap",
"indianPerCap",
"AsianPerCap",
"OtherPerCap",
"HispPerCap",
"NumUnderPov",
"PctPopUnderPov",
"PctLess9thGrade",
"PctNotHSGrad",
"PctBSorMore",
"PctUnemployed",
"PctEmploy",
"PctEmplManu",
"PctEmplProfServ",
"PctOccupManu",
"PctOccupMgmtProf",
"MalePctDivorce",
"MalePctNevMarr",
"FemalePctDiv",
"TotalPctDiv",
"PersPerFam",
"PctFam2Par",
"PctKids2Par",
"PctYoungKids2Par",
"PctTeen2Par",
"PctWorkMomYoungKids",
"PctWorkMom",
"NumIlleg",
"PctIlleg",
"NumImmig",
"PctImmigRecent",
"PctImmigRec5",
"PctImmigRec8",
"PctImmigRec10",
"PctRecentImmig",
"PctRecImmig5",
"PctRecImmig8",
"PctRecImmig10",
"PctSpeakEnglOnly",
"PctNotSpeakEnglWell",
"PctLargHouseFam",
"PctLargHouseOccup",
"PersPerOccupHous",
"PersPerOwnOccHous",
"PersPerRentOccHous",
"PctPersOwnOccup",
"PctPersDenseHous",
"PctHousLess3BR",
"MedNumBR",
"HousVacant",
"PctHousOccup",
"PctHousOwnOcc",
"PctVacantBoarded",
"PctVacMore6Mos",
"MedYrHousBuilt",
"PctHousNoPhone",
"PctWOFullPlumb",
"OwnOccLowQuart",
"OwnOccMedVal",
"OwnOccHiQuart",
"RentLowQ",
"RentMedian",
"RentHighQ",
"MedRent",
"MedRentPctHousInc",
"MedOwnCostPctInc",
"MedOwnCostPctIncNoMtg",
"NumInShelters",
"NumStreet",
"PctForeignBorn",
"PctBornSameState",
"PctSameHouse85",
"PctSameCity85",
"PctSameState85",
"LemasSwornFT",
"LemasSwFTPerPop",
"LemasSwFTFieldOps",
"LemasSwFTFieldPerPop",
"LemasTotalReq",
"LemasTotReqPerPop",
"PolicReqPerOffic",
"PolicPerPop",
"RacialMatchCommPol",
"PctPolicWhite",
"PctPolicBlack",
"PctPolicHisp",
"PctPolicAsian",
"PctPolicMinor",
"OfficAssgnDrugUnits",
"NumKindsDrugsSeiz",
"PolicAveOTWorked",
"LandArea",
"PopDens",
"PctUsePubTrans",
"PolicCars",
"PolicOperBudg",
"LemasPctPolicOnPatr",
"LemasGangUnitDeploy",
"LemasPctOfficDrugUn",
"PolicBudgPerPop",
"ViolentCrimesPerPop"
)
head(crimedata)
library(ggplot2)
##Crime Data HH Size, Violent Crimes per Population, by population, State, MedIncome, Age
crimedata.lm <- lm(ViolentCrimesPerPop ~ medIncome, data = crimedata)
newx <- crimedata$medIncome
newx <- sort(newx)
prd_c <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("confidence"), type = c("response"), level = .99)
prd_p <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("predict"), type = c("response"), level = .99)
plot(crimedata$medIncome, crimedata$violentCrimesPerPop, ylab = "Crimes per Population", xlab = "Median Income")
abline(crimedata.lm, col = "red")
lines(newx,prd_c[,2],col = "blue",lty = 2, lwd = 2)
lines(newx,prd_c[,3],col = "blue", lty = 2, lwd = 2)
lines(newx,prd_p[,2],col = "green", lty = 2, lwd = 2)
lines(newx,prd_p[,3],col = "green", lty = 2, lwd = 2)
data = crimedata
cdss <- data.frame(crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
#ct_SUM <- colSums(nacdss)
#ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
# Pearson's correlation test
cor.test(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
cor.test(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop, method = "pearson", alternative = "two.sided")
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE, main= "Black Per Capita data") ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE, main= "Hispanic Per Capita data") ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE, main= "Low Rent Q data") ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE, main= "% Less then 9th Grade Education data") ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
#Log Transform all variables
cdsslog <- log(cdss)
#cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
#Check for normality after log transformation
# cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
# cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
# qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
# qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
# grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
# cdss[] <- lapply(cdss, gsub, pattern='-Inf', replacement='') ## removes chars from dataset
# grep("-Inf", cdss) ## tells you which lines contain the word in the parenthesis.
# Transform dataset to numeric for analysis
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
##nancdss <- is.nan(cdsslog)
# #NABEER == NA
# #sum(NABEER, count = TRUE)
##ct_SUM1 <- colSums(nancdss)
##ct_SUM1
str(cdsslog)
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqnorm(cdsslog$crimedata.medIncome, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.medIncome, ylim = NULL, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdsslog$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.agePct12t29, ylim = NULL,pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
qqline(cdsslog$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.blackPerCap, ylim = NULL, pch = 1, frame = FALSE, main= "Black Per Capita data") ## plots the data
qqline(cdsslog$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.HispPerCap, ylim = NULL, pch = 1, frame = FALSE, main= "Hispanic Per Capita data") ## plots the data
qqline(cdsslog$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.RentLowQ, ylim = NULL, pch = 1, frame = FALSE, main= "Low Rent Q data") ## plots the data
qqline(cdsslog$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.PctLess9thGrade, ylim = NULL, pch = 1, frame = FALSE, main= "% Less then 9th Grade Education data") ## plots the data
qqline(cdsslog$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
