"PersPerOccupHous",
"PersPerOwnOccHous",
"PersPerRentOccHous",
"PctPersOwnOccup",
"PctPersDenseHous",
"PctHousLess3BR",
"MedNumBR",
"HousVacant",
"PctHousOccup",
"PctHousOwnOcc",
"PctVacantBoarded",
"PctVacMore6Mos",
"MedYrHousBuilt",
"PctHousNoPhone",
"PctWOFullPlumb",
"OwnOccLowQuart",
"OwnOccMedVal",
"OwnOccHiQuart",
"RentLowQ",
"RentMedian",
"RentHighQ",
"MedRent",
"MedRentPctHousInc",
"MedOwnCostPctInc",
"MedOwnCostPctIncNoMtg",
"NumInShelters",
"NumStreet",
"PctForeignBorn",
"PctBornSameState",
"PctSameHouse85",
"PctSameCity85",
"PctSameState85",
"LemasSwornFT",
"LemasSwFTPerPop",
"LemasSwFTFieldOps",
"LemasSwFTFieldPerPop",
"LemasTotalReq",
"LemasTotReqPerPop",
"PolicReqPerOffic",
"PolicPerPop",
"RacialMatchCommPol",
"PctPolicWhite",
"PctPolicBlack",
"PctPolicHisp",
"PctPolicAsian",
"PctPolicMinor",
"OfficAssgnDrugUnits",
"NumKindsDrugsSeiz",
"PolicAveOTWorked",
"LandArea",
"PopDens",
"PctUsePubTrans",
"PolicCars",
"PolicOperBudg",
"LemasPctPolicOnPatr",
"LemasGangUnitDeploy",
"LemasPctOfficDrugUn",
"PolicBudgPerPop",
"ViolentCrimesPerPop"
)
library(ggplot2)
##Crime Data HH Size, Violent Crimes per Population, by population, State, MedIncome, Age
crimedata.lm <- lm(ViolentCrimesPerPop ~ medIncome, data = crimedata)
newx <- crimedata$medIncome
newx <- sort(newx)
prd_c <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("confidence"), type = c("response"), level = .99)
prd_p <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("predict"), type = c("response"), level = .99)
plot(crimedata$medIncome, crimedata$violentCrimesPerPop, ylab = "Crimes per Population", xlab = "Median Income")
abline(crimedata.lm, col = "red")
lines(newx,prd_c[,2],col = "blue",lty = 2, lwd = 2)
lines(newx,prd_c[,3],col = "blue", lty = 2, lwd = 2)
lines(newx,prd_p[,2],col = "green", lty = 2, lwd = 2)
lines(newx,prd_p[,3],col = "green", lty = 2, lwd = 2)
##Scatterplot of the original data
##plot(temp, chirps, ylab = "Chirps Per Minute", xlab = "Temperature")
Income<- cor(crimedata$ViolentCrimesPerPop, crimedata$medIncome)
pop <- cor(crimedata$ViolentCrimesPerPop, crimedata$population)
HH <- cor(crimedata$ViolentCrimesPerPop, crimedata$householdsize)
age1221 <- cor(crimedata$agePct12t21, crimedata$ViolentCrimesPerPop)
cor(crimedata$agePct12t29, crimedata$ViolentCrimesPerPop)
cor(crimedata$agePct16t24, crimedata$ViolentCrimesPerPop)
cor(crimedata$agePct65up, crimedata$ViolentCrimesPerPop)
cor(crimedata$state, crimedata$ViolentCrimesPerPop)
corr <- c(Income, pop, age1221)
plot(corr)
qplot(crimedata$ViolentCrimesPerPop, crimedata$householdsize)
## householdsize: mean people per household (numeric - decimal)
qplot(crimedata$ViolentCrimesPerPop, crimedata$population)
##population: population for community: (numeric - decimal)
qplot(crimedata$state, crimedata$ViolentCrimesPerPop)
##state: US state (by number) - not counted as predictive above, but if considered, should be consided nominal (nominal)
qplot(crimedata$medIncome, crimedata$ViolentCrimesPerPop)
##medIncome: median household income (numeric - decimal)
qplot(crimedata$agePct12t21, crimedata$ViolentCrimesPerPop)
qplot(crimedata$agePct12t29, crimedata$ViolentCrimesPerPop)
qplot(crimedata$agePct16t24, crimedata$ViolentCrimesPerPop)
qplot(crimedata$agePct65up, crimedata$ViolentCrimesPerPop)
##40% of Age 12-29 concentration around .2 per 100K make up
##percentage of population that is 12-29 in age (numeric - decimal)
## ViolentCrimesPerPop: total number of violent crimes per 100K popuation (numeric - decimal) GOAL attribute (to be predicted)
##Crime Data by Demographic ethnicity
cor(crimedata$whitePerCap, crimedata$ViolentCrimesPerPop)
cor(crimedata$blackPerCap, crimedata$ViolentCrimesPerPop)
cor(crimedata$indianPerCap, crimedata$ViolentCrimesPerPop)
cor(crimedata$AsianPerCap, crimedata$ViolentCrimesPerPop)
cor(crimedata$HispPerCap, crimedata$ViolentCrimesPerPop)
qplot(crimedata$whitePerCap, crimedata$ViolentCrimesPerPop)
qplot(crimedata$blackPerCap, crimedata$ViolentCrimesPerPop)
qplot(crimedata$indianPerCap, crimedata$ViolentCrimesPerPop)
qplot(crimedata$AsianPerCap, crimedata$ViolentCrimesPerPop)
qplot(crimedata$OtherPerCap, crimedata$ViolentCrimesPerPop)
qplot(crimedata$HispPerCap, crimedata$ViolentCrimesPerPop)
##blackPerCap, indianPerCap, AsianPerCap, OtherPerCap, HispPerCap, whitePerCap
##householdsize, population, ViolentCrimesPerPop,
##Community Crime Data by Rental levels and population density
cor(crimedata$RentLowQ, crimedata$ViolentCrimesPerPop)
cor(crimedata$RentMedian, crimedata$ViolentCrimesPerPop)
cor(crimedata$RentHighQ, crimedata$ViolentCrimesPerPop)
cor(crimedata$PopDens, crimedata$ViolentCrimesPerPop)
cor(crimedata$MedRent, crimedata$ViolentCrimesPerPop)
cor(crimedata$MedRentPctHousInc, crimedata$ViolentCrimesPerPop)
cor(crimedata$MedOwnCostPctInc, crimedata$ViolentCrimesPerPop)
qplot(crimedata$RentLowQ, crimedata$ViolentCrimesPerPop)
qplot(crimedata$RentMedian, crimedata$ViolentCrimesPerPop)
qplot(crimedata$RentHighQ, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PopDens, crimedata$ViolentCrimesPerPop)
qplot(crimedata$MedRent, crimedata$ViolentCrimesPerPop)
qplot(crimedata$MedRentPctHousInc, crimedata$ViolentCrimesPerPop)
qplot(crimedata$MedOwnCostPctInc, crimedata$ViolentCrimesPerPop)
##ViolentCrimesPerPop
##PopDens, RentLowQ, RentMedian, RentHighQ, MedRent, MedRentPctHousInc, MedOwnCostPctInc,
##Community crime data based on housing occupancy
cor(crimedata$HousVacant, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctHousOccup, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctHousOwnOcc, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctVacantBoarded, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctVacMore6Mos, crimedata$ViolentCrimesPerPop)
qplot(crimedata$HousVacant, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctHousOccup, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctHousOwnOcc, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctVacantBoarded, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctVacMore6Mos, crimedata$ViolentCrimesPerPop)
##HousVacant, PctHousOccup, PctHousOwnOcc, PctVacantBoarded, PctVacMore6Mos
## House Occup Higher - Vacant and Boarded lower
##Community Crime Data - Education and Employement
cor(crimedata$PctLess9thGrade, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctNotHSGrad, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctBSorMore, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctUnemployed, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctEmploy, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctEmplManu, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctEmplProfServ, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctOccupManu, crimedata$ViolentCrimesPerPop)
cor(crimedata$PctOccupMgmtProf, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctLess9thGrade, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctNotHSGrad, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctBSorMore, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctUnemployed, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctEmploy, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctEmplManu, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctEmplProfServ, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctOccupManu, crimedata$ViolentCrimesPerPop)
qplot(crimedata$PctOccupMgmtProf, crimedata$ViolentCrimesPerPop)
##PctLess9thGrade, PctNotHSGrad, PctBSorMore, PctUnemployed, PctEmploy, PctEmplManu, PctEmplProfServ, PctOccupManu, PctOccupMgmtProf
knitr::opts_chunk$set(echo = TRUE)
data = crimedata
cdss <- data.frame(crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
ct_SUM <- colSums(nacdss)
ct_SUM
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
ct_SUM <- colSums(nacdss)
ct_SUM
cor.test(cdss$crimedata.medIncome)
cor(cdss$crimedata.medIncome)
head(cdss)
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
plot(crimedata$medIncome, crimedata$violentCrimesPerPop, ylab = "Crimes per Population", xlab = "Median Income")
abline(crimedata.lm, col = "red")
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
qqnorm(crimedatalog, pch = 1, frame = FALSE) ## plots the data
cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
cdss1[] <- lapply(cdss, gsub, pattern='?', replacement='') ## removes chars from dataset
cdss[] <- lapply(cdss, gsub, pattern='?', replacement='') ## removes chars from dataset
grep("?", cdss)
cdss[] <- lapply(cdss, gsub, pattern='?', replacement='') ## removes chars from dataset
cdss
nancdss <- is.nan(cdss)
?is.nan
is.nan(cdss)
str(cdss)
cdss <- as.numeric(cdss)
cdss <- as.numeric(unlist(cdss))
str(cdss)
head(cdss)
knitr::opts_chunk$set(echo = TRUE)
crimedata  <- "http://archive.ics.uci.edu/ml/machine-learning-databases/communities/communities.data"
df <- read.csv(crimedata, header = FALSE)
crimedata <- df
str(crimedata)
colnames(crimedata) <- c("state",
"county",
"community",
"communityname ",
"fold",
"population",
"householdsize",
"racepctblack",
"racePctWhite",
"racePctAsian",
"racePctHisp",
"agePct12t21",
"agePct12t29",
"agePct16t24",
"agePct65up",
"numbUrban",
"pctUrban",
"medIncome",
"pctWWage",
"pctWFarmSelf",
"pctWInvInc",
"pctWSocSec",
"pctWPubAsst",
"pctWRetire",
"medFamInc",
"perCapInc",
"whitePerCap",
"blackPerCap",
"indianPerCap",
"AsianPerCap",
"OtherPerCap",
"HispPerCap",
"NumUnderPov",
"PctPopUnderPov",
"PctLess9thGrade",
"PctNotHSGrad",
"PctBSorMore",
"PctUnemployed",
"PctEmploy",
"PctEmplManu",
"PctEmplProfServ",
"PctOccupManu",
"PctOccupMgmtProf",
"MalePctDivorce",
"MalePctNevMarr",
"FemalePctDiv",
"TotalPctDiv",
"PersPerFam",
"PctFam2Par",
"PctKids2Par",
"PctYoungKids2Par",
"PctTeen2Par",
"PctWorkMomYoungKids",
"PctWorkMom",
"NumIlleg",
"PctIlleg",
"NumImmig",
"PctImmigRecent",
"PctImmigRec5",
"PctImmigRec8",
"PctImmigRec10",
"PctRecentImmig",
"PctRecImmig5",
"PctRecImmig8",
"PctRecImmig10",
"PctSpeakEnglOnly",
"PctNotSpeakEnglWell",
"PctLargHouseFam",
"PctLargHouseOccup",
"PersPerOccupHous",
"PersPerOwnOccHous",
"PersPerRentOccHous",
"PctPersOwnOccup",
"PctPersDenseHous",
"PctHousLess3BR",
"MedNumBR",
"HousVacant",
"PctHousOccup",
"PctHousOwnOcc",
"PctVacantBoarded",
"PctVacMore6Mos",
"MedYrHousBuilt",
"PctHousNoPhone",
"PctWOFullPlumb",
"OwnOccLowQuart",
"OwnOccMedVal",
"OwnOccHiQuart",
"RentLowQ",
"RentMedian",
"RentHighQ",
"MedRent",
"MedRentPctHousInc",
"MedOwnCostPctInc",
"MedOwnCostPctIncNoMtg",
"NumInShelters",
"NumStreet",
"PctForeignBorn",
"PctBornSameState",
"PctSameHouse85",
"PctSameCity85",
"PctSameState85",
"LemasSwornFT",
"LemasSwFTPerPop",
"LemasSwFTFieldOps",
"LemasSwFTFieldPerPop",
"LemasTotalReq",
"LemasTotReqPerPop",
"PolicReqPerOffic",
"PolicPerPop",
"RacialMatchCommPol",
"PctPolicWhite",
"PctPolicBlack",
"PctPolicHisp",
"PctPolicAsian",
"PctPolicMinor",
"OfficAssgnDrugUnits",
"NumKindsDrugsSeiz",
"PolicAveOTWorked",
"LandArea",
"PopDens",
"PctUsePubTrans",
"PolicCars",
"PolicOperBudg",
"LemasPctPolicOnPatr",
"LemasGangUnitDeploy",
"LemasPctOfficDrugUn",
"PolicBudgPerPop",
"ViolentCrimesPerPop"
)
head(crimedata)
library(ggplot2)
##Crime Data HH Size, Violent Crimes per Population, by population, State, MedIncome, Age
crimedata.lm <- lm(ViolentCrimesPerPop ~ medIncome, data = crimedata)
newx <- crimedata$medIncome
newx <- sort(newx)
prd_c <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("confidence"), type = c("response"), level = .99)
prd_p <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("predict"), type = c("response"), level = .99)
plot(crimedata$medIncome, crimedata$violentCrimesPerPop, ylab = "Crimes per Population", xlab = "Median Income")
abline(crimedata.lm, col = "red")
lines(newx,prd_c[,2],col = "blue",lty = 2, lwd = 2)
lines(newx,prd_c[,3],col = "blue", lty = 2, lwd = 2)
lines(newx,prd_p[,2],col = "green", lty = 2, lwd = 2)
lines(newx,prd_p[,3],col = "green", lty = 2, lwd = 2)
data = crimedata
cdss <- data.frame(crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
ct_SUM <- colSums(nacdss)
ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
#Check for normality after log transformation
cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
cdss[] <- lapply(cdss, gsub, pattern='-Inf', replacement='') ## removes chars from dataset
grep("-Inf", cdss) ## tells you which lines contain the word in the parenthesis.
str(cdss)
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
# nancdss <- is.nan(cdss)
# #NABEER == NA
# #sum(NABEER, count = TRUE)
# ct_SUM1 <- colSums(nancdss)
# ct_SUM1
str(cdss)
nancdss <- is.nan(cdss)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
cor(cdss$crimedata.medIncome, cdss$crimedatalog)
cor(cdss$crimedata.agePct12t29, cdss$crimedatalog)
cor(cdss$crimedata.blackPerCap, cdss$crimedatalog)
cor(cdss$crimedata.HispPerCap, cdss$crimedatalog)
cor(cdss$crimedata.RentLowQ, cdss$crimedatalog)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedatalog)
head(cdss)
#Check for normality after log transformation
cdss$crimedatalog <- log10(cdss$crimedata.ViolentCrimesPerPop)
cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
data = crimedata
cdss <- data.frame(crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
ct_SUM <- colSums(nacdss)
ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
#Check for normality after log transformation
cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
data = crimedata
cdss <- data.frame(crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
ct_SUM <- colSums(nacdss)
ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.blackPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.HispPerCap, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.RentLowQ, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedata.ViolentCrimesPerPop)
#Check for normality
qqnorm(cdss$crimedata.ViolentCrimesPerPop, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
#Check for normality after log transformation
cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
# qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
# qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
# grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
cdss[] <- lapply(cdss, gsub, pattern='-Inf', replacement='') ## removes chars from dataset
grep("-Inf", cdss) ## tells you which lines contain the word in the parenthesis.
# Transform dataset to numeric for analysis
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
# nancdss <- is.nan(cdss)
# #NABEER == NA
# #sum(NABEER, count = TRUE)
# ct_SUM1 <- colSums(nancdss)
# ct_SUM1
str(cdss)
# Check for normality of log transformed data
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
head(cdss)
# Check for correlation of log transformed violent crime data
cor(cdss$crimedata.medIncome, cdss$crimedatalog)
cor(cdss$crimedata.agePct12t29, cdss$crimedatalog)
cor(cdss$crimedata.blackPerCap, cdss$crimedatalog)
cor(cdss$crimedata.HispPerCap, cdss$crimedatalog)
cor(cdss$crimedata.RentLowQ, cdss$crimedatalog)
cor(cdss$crimedata.PctLess9thGrade, cdss$crimedatalog)
qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.medIncome, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.agePct12t29, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.agePct12t29, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.blackPerCap, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.blackPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.HispPerCap, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.HispPerCap, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.RentLowQ, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.RentLowQ, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdss$crimedata.PctLess9thGrade, pch = 1, frame = FALSE) ## plots the data
qqline(cdss$crimedata.PctLess9thGrade, col = "steelblue", lwd = 2) ## adds a line
cdsslog <- log10(cdss)
head(cdsslog)
cdsslog <- cdsslog[-c(crimedatalog),] ## This will remove the 212 column and leave the rest
head(cdsslog)
cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
