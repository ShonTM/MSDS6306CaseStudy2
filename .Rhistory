d<- cdss4[ , 5]
c<- cdss7[ , -5]
d<- cdss7[ , 5]
cdss.rf7 <- randomForest(c, d)
cdss.rf7
cdss.rf7$importance
cdss4 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$NumUnderPov,
crimedata$PctPopUnderPov)
c<- cdss4[ , -5]
d<- cdss4[ , 5]
c<- cdss4[ , -1]
d<- cdss4[ , 1]
cdss.rf4 <- randomForest(c, d)
cdss.rf4
cdss.rf4$importance
c<- cdss2[ , ]
d<- cdss2[ , ]
cdss.rf2 <- randomForest(c, d)
c<- cdss2[ , -1]
d<- cdss2[ , 1]
cdss.rf2 <- randomForest(c, d)
cdss.rf2
cdss.rf2$importance
cdss8 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$PctSpeakEnglOnly,
crimedata$PctNotSpeakEnglWell,
crimedata$RentLowQ,
crimedata$RentMedian,
crimedata$RentHighQ)
c<- cdss8[ , -5]
d<- cdss8[ , 5]
cdss.rf8 <- randomForest(c, d)
cdss.rf8
cdss.rf8$importance
c<- cdss8[ , 1]
d<- cdss8[ , 1]
cdss.rf8 <- randomForest(c, d)
c<- cdss8[ , 1]
d<- cdss8[ , -1]
cdss.rf8 <- randomForest(c, d)
c<- cdss8[ , -1]
d<- cdss8[ , 1]
cdss.rf8 <- randomForest(c, d)
cdss.rf8
cdss.rf8$importance
c<- cdss2[ , -1]
d<- cdss2[ , 1]
cdss.rf2 <- randomForest(c, d)
cdss.rf2
cdss.rf2$importance
c<- cdss2[ , -1]
d<- cdss2[ , 2]
cdss.rf2 <- randomForest(c, d)
cdss.rf2
cdss.rf2$importance
predict(cdss.rf2, c)
# 3. Preliminary Data Viz.
ggplot(data = melt(wine), mapping = aes(x = value)) + geom_histogram(bins = 20) + facet_wrap(~variable, scales = 'free_x')
# 4. Train classifer (clf)
library(pROC)
library(randomForest)
library(ggplot2)
library(reshape2)
# 2. Load data
file_loc <-"http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
wine <- read.csv(url(file_loc), sep=";")
# 3. Preliminary Data Viz.
ggplot(data = melt(wine), mapping = aes(x = value)) + geom_histogram(bins = 20) + facet_wrap(~variable, scales = 'free_x')
# 4. Train classifer (clf)
install.packages("pROC")
cdss <- data.frame(crimedata$householdsize,
crimedata$ViolentCrimesPerPop,
crimedata$racepctblack,
crimedata$racePctWhite,
crimedata$racePctHisp,
crimedata$PctLess9thGrade,
crimedata$PctNotHSGrad,
crimedata$PctBSorMore,
crimedata$MalePctDivorce,
crimedata$FemalePctDiv,
crimedata$PctImmigRecent,
crimedata$PctImmigRec5,
crimedata$PctImmigRec8,
crimedata$PctImmigRec10,
crimedata$PctSpeakEnglOnly,
crimedata$PctNotSpeakEnglWell,
crimedata$RentLowQ,
crimedata$RentMedian,
crimedata$RentHighQ)
c<- cdss[ , -1]
d<- cdss[ , 1]
cdss.rf <- randomForest(c, d)
cdss.rf
cdss.rf$importance
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
crimedata  <- "http://archive.ics.uci.edu/ml/machine-learning-databases/communities/communities.data"
df <- read.csv(crimedata, header = FALSE)
crimedata <- df
str(crimedata)
colnames(crimedata) <- c("state",
"county",
"community",
"communityname ",
"fold",
"population",
"householdsize",
"racepctblack",
"racePctWhite",
"racePctAsian",
"racePctHisp",
"agePct12t21",
"agePct12t29",
"agePct16t24",
"agePct65up",
"numbUrban",
"pctUrban",
"medIncome",
"pctWWage",
"pctWFarmSelf",
"pctWInvInc",
"pctWSocSec",
"pctWPubAsst",
"pctWRetire",
"medFamInc",
"perCapInc",
"whitePerCap",
"blackPerCap",
"indianPerCap",
"AsianPerCap",
"OtherPerCap",
"HispPerCap",
"NumUnderPov",
"PctPopUnderPov",
"PctLess9thGrade",
"PctNotHSGrad",
"PctBSorMore",
"PctUnemployed",
"PctEmploy",
"PctEmplManu",
"PctEmplProfServ",
"PctOccupManu",
"PctOccupMgmtProf",
"MalePctDivorce",
"MalePctNevMarr",
"FemalePctDiv",
"TotalPctDiv",
"PersPerFam",
"PctFam2Par",
"PctKids2Par",
"PctYoungKids2Par",
"PctTeen2Par",
"PctWorkMomYoungKids",
"PctWorkMom",
"NumIlleg",
"PctIlleg",
"NumImmig",
"PctImmigRecent",
"PctImmigRec5",
"PctImmigRec8",
"PctImmigRec10",
"PctRecentImmig",
"PctRecImmig5",
"PctRecImmig8",
"PctRecImmig10",
"PctSpeakEnglOnly",
"PctNotSpeakEnglWell",
"PctLargHouseFam",
"PctLargHouseOccup",
"PersPerOccupHous",
"PersPerOwnOccHous",
"PersPerRentOccHous",
"PctPersOwnOccup",
"PctPersDenseHous",
"PctHousLess3BR",
"MedNumBR",
"HousVacant",
"PctHousOccup",
"PctHousOwnOcc",
"PctVacantBoarded",
"PctVacMore6Mos",
"MedYrHousBuilt",
"PctHousNoPhone",
"PctWOFullPlumb",
"OwnOccLowQuart",
"OwnOccMedVal",
"OwnOccHiQuart",
"RentLowQ",
"RentMedian",
"RentHighQ",
"MedRent",
"MedRentPctHousInc",
"MedOwnCostPctInc",
"MedOwnCostPctIncNoMtg",
"NumInShelters",
"NumStreet",
"PctForeignBorn",
"PctBornSameState",
"PctSameHouse85",
"PctSameCity85",
"PctSameState85",
"LemasSwornFT",
"LemasSwFTPerPop",
"LemasSwFTFieldOps",
"LemasSwFTFieldPerPop",
"LemasTotalReq",
"LemasTotReqPerPop",
"PolicReqPerOffic",
"PolicPerPop",
"RacialMatchCommPol",
"PctPolicWhite",
"PctPolicBlack",
"PctPolicHisp",
"PctPolicAsian",
"PctPolicMinor",
"OfficAssgnDrugUnits",
"NumKindsDrugsSeiz",
"PolicAveOTWorked",
"LandArea",
"PopDens",
"PctUsePubTrans",
"PolicCars",
"PolicOperBudg",
"LemasPctPolicOnPatr",
"LemasGangUnitDeploy",
"LemasPctOfficDrugUn",
"PolicBudgPerPop",
"ViolentCrimesPerPop"
)
head(crimedata)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
##Crime Data HH Size, Violent Crimes per Population, by population, State, MedIncome, Age
crimedata.lm <- lm(ViolentCrimesPerPop ~ medIncome, data = crimedata)
newx <- crimedata$medIncome
newx <- sort(newx)
prd_c <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("confidence"), type = c("response"), level = .99)
prd_p <- predict(crimedata.lm, newdata = data.frame(medIncome = newx),
interval = c("predict"), type = c("response"), level = .99)
plot(crimedata$medIncome, crimedata$violentCrimesPerPop, ylab = "Crimes per Population", xlab = "Median Income")
abline(crimedata.lm, col = "red")
lines(newx,prd_c[,2],col = "blue",lty = 2, lwd = 2)
lines(newx,prd_c[,3],col = "blue", lty = 2, lwd = 2)
lines(newx,prd_p[,2],col = "green", lty = 2, lwd = 2)
lines(newx,prd_p[,3],col = "green", lty = 2, lwd = 2)
data = crimedata
#cdss <- data.frame(crimedata$householdsize, crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
cdss <- data.frame(crimedata$householdsize,
crimedata$ViolentCrimesPerPop,
crimedata$racepctblack,
crimedata$racePctWhite,
crimedata$racePctHisp,
crimedata$PctLess9thGrade,
crimedata$PctNotHSGrad,
crimedata$PctBSorMore,
crimedata$MalePctDivorce,
crimedata$FemalePctDiv,
crimedata$PctImmigRecent,
crimedata$PctImmigRec5,
crimedata$PctImmigRec8,
crimedata$PctImmigRec10,
crimedata$PctSpeakEnglOnly,
crimedata$PctNotSpeakEnglWell,
crimedata$RentLowQ,
crimedata$RentMedian,
crimedata$RentHighQ)
cdss2 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$racepctblack,
crimedata$racePctWhite,
crimedata$racePctAsian,
crimedata$racePctHisp,
crimedata$agePct12t21,
crimedata$agePct12t29,
crimedata$agePct16t24,
crimedata$agePct65up)
cdss3 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$medIncome,
crimedata$medFamInc,
crimedata$perCapInc,
crimedata$whitePerCap,
crimedata$blackPerCap,
crimedata$indianPerCap,
crimedata$AsianPerCap,
crimedata$OtherPerCap,
crimedata$HispPerCap)
cdss4 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$NumUnderPov,
crimedata$PctPopUnderPov)
cdss7 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$PctLess9thGrade,
crimedata$PctNotHSGrad,
crimedata$PctBSorMore,
crimedata$PctUnemployed)
cdss5 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$MalePctDivorce,
crimedata$MalePctNevMarr,
crimedata$FemalePctDiv,
crimedata$TotalPctDiv,
crimedata$NumIlleg,
crimedata$PctIlleg)
cdss6 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$NumImmig,
crimedata$PctImmigRecent,
crimedata$PctImmigRec5,
crimedata$PctImmigRec8,
crimedata$PctImmigRec10,
crimedata$PctRecentImmig,
crimedata$PctRecImmig5,
crimedata$PctRecImmig8,
crimedata$PctRecImmig10)
cdss8 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$PctSpeakEnglOnly,
crimedata$PctNotSpeakEnglWell,
crimedata$RentLowQ,
crimedata$RentMedian,
crimedata$RentHighQ)
crimedata$MedRent,
data = crimedata
#cdss <- data.frame(crimedata$householdsize, crimedata$ViolentCrimesPerPop, crimedata$medIncome, crimedata$agePct12t29, crimedata$blackPerCap,crimedata$HispPerCap, crimedata$RentLowQ, crimedata$PctLess9thGrade)
cdss <- data.frame(crimedata$householdsize,
crimedata$ViolentCrimesPerPop,
crimedata$racepctblack,
crimedata$racePctWhite,
crimedata$racePctHisp,
crimedata$PctLess9thGrade,
crimedata$PctNotHSGrad,
crimedata$PctBSorMore,
crimedata$MalePctDivorce,
crimedata$FemalePctDiv,
crimedata$PctImmigRecent,
crimedata$PctImmigRec5,
crimedata$PctImmigRec8,
crimedata$PctImmigRec10,
crimedata$PctSpeakEnglOnly,
crimedata$PctNotSpeakEnglWell,
crimedata$RentLowQ,
crimedata$RentMedian,
crimedata$RentHighQ)
cdss2 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$racepctblack,
crimedata$racePctWhite,
crimedata$racePctAsian,
crimedata$racePctHisp,
crimedata$agePct12t21,
crimedata$agePct12t29,
crimedata$agePct16t24,
crimedata$agePct65up)
cdss3 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$medIncome,
crimedata$medFamInc,
crimedata$perCapInc,
crimedata$whitePerCap,
crimedata$blackPerCap,
crimedata$indianPerCap,
crimedata$AsianPerCap,
crimedata$OtherPerCap,
crimedata$HispPerCap)
cdss4 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$NumUnderPov,
crimedata$PctPopUnderPov)
cdss7 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$PctLess9thGrade,
crimedata$PctNotHSGrad,
crimedata$PctBSorMore,
crimedata$PctUnemployed)
cdss5 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$MalePctDivorce,
crimedata$MalePctNevMarr,
crimedata$FemalePctDiv,
crimedata$TotalPctDiv,
crimedata$NumIlleg,
crimedata$PctIlleg)
cdss6 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$NumImmig,
crimedata$PctImmigRecent,
crimedata$PctImmigRec5,
crimedata$PctImmigRec8,
crimedata$PctImmigRec10,
crimedata$PctRecentImmig,
crimedata$PctRecImmig5,
crimedata$PctRecImmig8,
crimedata$PctRecImmig10)
cdss8 <- data.frame(
crimedata$ViolentCrimesPerPop,
crimedata$PctSpeakEnglOnly,
crimedata$PctNotSpeakEnglWell,
crimedata$RentLowQ,
crimedata$RentMedian,
crimedata$RentHighQ,
crimedata$MedRent,
crimedata$MedRentPctHousInc,
crimedata$MedOwnCostPctInc,
crimedata$MedOwnCostPctIncNoMtg,
crimedata$NumInShelters)
head(cdss)
str(cdss)
summary(cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
#ct_SUM <- colSums(nacdss)
#ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.householdsize, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
#library(randomForest)
#data = cdss
#cdds.rf <- randomForest(ViolentCrimesPerPop, PctLess9thGrade)
#cdds.rf
#cdds.rf$importance
#predict(cdds.rf, crimedata.ViolentCrimesPerPop)
#Log Transform all variables
cdsslog <- log(cdss)
#cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
#Check for normality after log transformation
# cdss$crimedatalog <- log(cdss$crimedata.ViolentCrimesPerPop)
# cdss$crimedatalog <- as.numeric(cdss$crimedatalog)
# qqnorm(cdss$crimedatalog, pch = 1, frame = FALSE) ## plots the data
# qqline(cdss$crimedatalog, col = "steelblue", lwd = 2) ## adds a line
# grep("?", cdss) ## tells you which lines contain the word in the parenthesis.
# cdss[] <- lapply(cdss, gsub, pattern='-Inf', replacement='') ## removes chars from dataset
# grep("-Inf", cdss) ## tells you which lines contain the word in the parenthesis.
# Transform dataset to numeric for analysis
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
##nancdss <- is.nan(cdsslog)
# #NABEER == NA
# #sum(NABEER, count = TRUE)
##ct_SUM1 <- colSums(nancdss)
##ct_SUM1
str(cdsslog)
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.householdsize, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.householdsize, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.medIncome, ylim = NULL, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
class(cdss$crimedata.ViolentCrimesPerPop)
cdsv <- cdss$crimedata.ViolentCrimesPerPop
hist(cdsv, prob = TRUE, col = "blue", main= "Histogram of Violent Crime Per Population", xlab ="count", ylab="% of Crime per Pop")
curve(dnorm(x, mean=mean(cdsv), sd=sd(cdsv)), add=TRUE,
col = "blue", main= "Histogram of Violent Crime Per Populatin", xlab ="count", ylab="% of Crime per Pop")
box()
##Scatterplot of the original data
##plot(temp, chirps, ylab = "Chirps Per Minute", xlab = "Temperature")
Income<- cor(crimedata$ViolentCrimesPerPop, crimedata$medIncome)
pop <- cor(crimedata$ViolentCrimesPerPop, crimedata$population)
HH <- cor(crimedata$ViolentCrimesPerPop, crimedata$householdsize)
age1221 <- cor(crimedata$agePct12t21, crimedata$ViolentCrimesPerPop)
library(randomForest)
install.packages("randomforest")
install.packages("RandomForest")
install.packages("randomForest")
library(randomForest)
#crimedata
c<- cdss2[ , -1]
d<- cdss2[ , 2]
cdss.rf2 <- randomForest(c, d)
cdss.rf2
cdss.rf2$importance
predict(cdss.rf2, c)
c<- cdss3[ , -1]
d<- cdss3[ , 1]
cdss.rf3 <- randomForest(c, d)
cor(cdss$crimedata.householdsize, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.medIncome, cdss$crimedata.ViolentCrimesPerPop)
cdss.$crimedata.medIncome
cdss
cdss$crimedata.medIncome
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
nacdss <- is.na(cdss)
#NABEER == NA
#sum(NABEER, count = TRUE)
#ct_SUM <- colSums(nacdss)
#ct_SUM
# Untransformed correlation test
cor(cdss$crimedata.householdsize, cdss$crimedata.ViolentCrimesPerPop)
cor(cdss$crimedata.agePct12t29, cdss$crimedata.ViolentCrimesPerPop)
cdsslog <- log(cdss)
#cdsslog <- subset(cdsslog, select = -crimedatalog )
head(cdsslog)
cdsslog
cdss[] <- lapply(cdss, function(x) as.numeric(as.character(x)))
str(cdsslog)
# Check for normality of log transformed data
qqnorm(cdsslog$crimedata.householdsize, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.householdsize, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.ViolentCrimesPerPop, ylim = NULL, pch = 1, frame = FALSE, main= "Violent Crime Per Pop Data") ## plots the data
qqline(cdsslog$crimedata.ViolentCrimesPerPop, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.medIncome, ylim = NULL, pch = 1, frame = FALSE, main= "Median Income Data") ## plots the data
qqline(cdsslog$crimedata.medIncome, col = "steelblue", lwd = 2) ## adds a line
qqnorm(cdsslog$crimedata.agePct12t29, ylim = NULL,pch = 1, frame = FALSE, main= "Age % 12 - 29 yrs old Data") ## plots the data
